{
  "name": "vscode-code-review",
  "displayName": "Code Review",
  "description": "Create expert reviews / code reviews for a workspace that can be exported as a document for handing over to customers",
  "version": "1.24.1",
  "publisher": "d-koppenhagen",
  "author": "Danny Koppenhagen <mail@d-koppenhagen.de> (https://d-koppenhagen.de)",
  "homepage": "https://github.com/d-koppenhagen/vscode-code-review",
  "bugs": {
    "url": "https://github.com/d-koppenhagen/vscode-code-review/issues",
    "email": "mail@d-koppenhagen.de"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/d-koppenhagen/vscode-code-review.git"
  },
  "license": "SEE LICENSE IN LICENSE",
  "engines": {
    "vscode": "^1.52.0"
  },
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#9B9DEC",
    "theme": "light"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./dist/extension.js",
  "keywords": [
    "code review",
    "review",
    "comments"
  ],
  "contributes": {
    "commands": [
      {
        "command": "codeReview.addNote",
        "title": "Code Review: Add Note",
        "icon": {
          "light": "images/icons/add-light.svg",
          "dark": "images/icons/add-dark.svg"
        }
      },
      {
        "command": "codeReview.exportAsHtmlWithDefaultTemplate",
        "title": "Code Review: Export as HTML with default template"
      },
      {
        "command": "codeReview.exportAsHtmlWithHandlebarsTemplate",
        "title": "Code Review: Export as HTML with Handlebars template"
      },
      {
        "command": "codeReview.exportAsGitLabImportableCsv",
        "title": "Code Review: Export as GitLab importable CSV file"
      },
      {
        "command": "codeReview.exportAsGitHubImportableCsv",
        "title": "Code Review: Export as GitHub importable CSV file (github-csv-tools)"
      },
      {
        "command": "codeReview.exportAsJiraImportableCsv",
        "title": "Code Review: Export as JIRA importable CSV file"
      },
      {
        "command": "codeReview.exportAsJson",
        "title": "Code Review: Export as JSON file"
      },
      {
        "command": "codeReview.importFromJson",
        "title": "Code Review: Import from JSON file"
      },
      {
        "command": "codeReview.deleteNote",
        "title": "Delete"
      },
      {
        "command": "codeReview.filterByCommitEnable",
        "title": "Code Review: View comments from the current commit",
        "icon": {
          "light": "images/icons/filter-off-light.svg",
          "dark": "images/icons/filter-off-dark.svg"
        }
      },
      {
        "command": "codeReview.filterByCommitDisable",
        "title": "Code Review: View comments from all commits",
        "icon": {
          "light": "images/icons/filter-on-light.svg",
          "dark": "images/icons/filter-on-dark.svg"
        }
      },
      {
        "command": "codeReview.filterByFilenameEnable",
        "title": "Code Review: View comments from the current file",
        "icon": {
          "light": "images/icons/filter-filename-off-light.svg",
          "dark": "images/icons/filter-filename-off-dark.svg"
        }
      },
      {
        "command": "codeReview.filterByFilenameDisable",
        "title": "Code Review: View comments from all files",
        "icon": {
          "light": "images/icons/filter-filename-on-light.svg",
          "dark": "images/icons/filter-filename-on-dark.svg"
        }
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "codeReview.addNote",
          "group": "cmdGroup@1"
        }
      ],
      "view/title": [
        {
          "command": "codeReview.exportAsHtmlWithDefaultTemplate",
          "when": "view == code-review.list",
          "group": "export_html@0"
        },
        {
          "command": "codeReview.exportAsHtmlWithHandlebarsTemplate",
          "when": "view == code-review.list",
          "group": "export_html@1"
        },
        {
          "command": "codeReview.exportAsGitLabImportableCsv",
          "when": "view == code-review.list",
          "group": "export_source_control@1"
        },
        {
          "command": "codeReview.exportAsGitHubImportableCsv",
          "when": "view == code-review.list",
          "group": "export_source_control@0"
        },
        {
          "command": "codeReview.exportAsJson",
          "when": "view == code-review.list",
          "group": "share@1"
        },
        {
          "command": "codeReview.exportAsJiraImportableCsv",
          "when": "view == code-review.list",
          "group": "export_source_control@2"
        },
        {
          "command": "codeReview.importFromJson",
          "when": "view == code-review.list",
          "group": "share@0"
        },
        {
          "command": "codeReview.addNote",
          "when": "view == code-review.list",
          "group": "navigation@0"
        },
        {
          "command": "codeReview.filterByCommitEnable",
          "when": "view == code-review.list && !isFilteredByCommit",
          "group": "navigation@1"
        },
        {
          "command": "codeReview.filterByCommitDisable",
          "when": "view == code-review.list && isFilteredByCommit",
          "group": "navigation@1"
        },
        {
          "command": "codeReview.filterByFilenameEnable",
          "when": "view == code-review.list && !isFilteredByFilename",
          "group": "navigation@2"
        },
        {
          "command": "codeReview.filterByFilenameDisable",
          "when": "view == code-review.list && isFilteredByFilename",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "codeReview.deleteNote",
          "when": "view == code-review.list && viewItem == comment"
        }
      ]
    },
    "configuration": {
      "id": "code-review",
      "type": "object",
      "title": "Code Review",
      "properties": {
        "code-review.filename": {
          "type": "string",
          "title": "The filename for the csv file",
          "description": "The name will be used for the file with the *.csv extension that contains the stored code review notes",
          "default": "code-review"
        },
        "code-review.baseUrl": {
          "type": "string",
          "title": "The base URL for a referenced file without the SHA",
          "description": "The base URL is used to build a full link to the file (e.g. \"https://github.com/foo/bar/blob/b0b4...0175/src/file.txt#L12-L19\"). It will be appended with the GIT SHA if available followed by the relative path of the file and the selected lines as an anker. This setting is skipped when the setting `code-review.customUrl` is defined.",
          "default": ""
        },
        "code-review.customUrl": {
          "type": "string",
          "title": "The URL mask with placeholders for a referenced file without the SHA",
          "description": "The custom URL is used to build a full link to the file.\nThe following placeholders are available:\n - {sha}: insert the SHA ref for the file\n - {file}: insert the file name/path\n - {start}: insert the start of the lines selection as an anker\n - {end}: insert the end of the lines selection as an anker\ne.g. \"https://gitlab.com/foo/bar/baz/-/blob/{sha}/src/{file}#L{start}-{end}\" becomes this in the end: \"https://gitlab.com/foo/bar/baz/-/blob/b0b4...0175/src/file.txt#L12-19\"",
          "default": ""
        },
        "code-review.categories": {
          "type": "array",
          "title": "Categories",
          "description": "Configure categories to choose for review categorization",
          "items": {
            "type": "string"
          },
          "default": [
            "Architecture",
            "Best Practices",
            "Code-Style",
            "Complexity",
            "Error Handling",
            "Maintainability",
            "Performance",
            "Reliability",
            "Separation of concerns"
          ]
        },
        "code-review.groupBy": {
          "type": "string",
          "enum": [
            "filename",
            "priority",
            "category"
          ],
          "default": "filename",
          "title": "Group report results",
          "description": "You can choose one of the available options to group the report results by this property."
        },
        "code-review.reportWithCodeSelection": {
          "type": "boolean",
          "title": "Include Code Selection in Report",
          "description": "Define whether to include the code selection(s) in generated reports or not.",
          "default": false
        },
        "code-review.reportWithPrivateComments": {
          "type": "boolean",
          "title": "Include Private Comments in Report",
          "description": "Define whether to include private comments in generated reports or not.",
          "default": false
        },
        "code-review.defaultTemplatePath": {
          "type": "string",
          "title": "The path to a default Handlebars template to be used for HTML default export",
          "description": "The template is used when choosing 'Export as HTML with default template' extension command. Otherwise the out-of-the-box template provided by this extension is used.",
          "default": ""
        },
        "code-review.priorities": {
          "type": "array",
          "title": "Priority labels",
          "description": "Configure the labels that should be used for the priorities.\nThe first label is used when no priority is defined.\nThe subsequent labels are given in ascending priority (max. 3 priority levels)",
          "uniqueItems": true,
          "maxItems": 4,
          "minItems": 4,
          "items": {
            "type": "string"
          },
          "default": [
            "none",
            "low",
            "medium",
            "high"
          ]
        },
        "code-review.gitDirectory": {
          "type": "string",
          "title": "The folder containing the Git repository",
          "markdownDescription": "Use this setting when the Git repository is located in an other directory than the workspace one.\nThe path can be **relative** (prefixed with `.` or `..`) or **absolute** (prefixed with `/` on Linux/MacOS or `{drive}:\\` on Windows).\nExamples:\n- `./app`: for {workspace}/app (Linux/MacOS)\n- `../app`: for a folder at the same level as the workspace (Linux/MacOS)\n- `/path/to/my/app`: for an absolute path (Linux/MacOS)\n- `C:\\Path\\To\\My\\App`: for an absolute path (Windows)",
          "default": "."
        },
        "code-review.privateCommentIcon": {
          "type": "string",
          "title": "Identifier of the icon to show next to a private comment",
          "markdownDescription": "The available icons are listed in <https://code.visualstudio.com/api/references/icons-in-labels#icon-listing>.  \nA search engine can be found at <https://microsoft.github.io/vscode-codicons/dist/codicon.html>.",
          "default": "eye-closed"
        },
        "code-review.filterCommentsByCommit": {
          "type": "boolean",
          "title": "Only view comments from the current commit",
          "description": "Define whether to view only the comments from the current commit or not.",
          "default": false
        },
        "code-review.filterCommentsByFilename": {
          "type": "boolean",
          "title": "Only view comments from the current file",
          "description": "Define whether to view only the comments from the current file or not.",
          "default": false
        },
        "code-review.importBackup": {
          "type": "boolean",
          "title": "Make a copy of the comments before importing.",
          "description": "Define whether to backup the existing comments before importing new ones or not.",
          "default": true
        },
        "code-review.importCloneSuffix": {
          "type": "string",
          "title": "Cloned comments title suffix.",
          "description": "Suffix to append to the title when existing comments are imported in 'clone' mode.",
          "default": "(copy)"
        },
        "code-review.importConflictMode": {
          "enum": [
            "",
            "skip",
            "overwrite",
            "clone"
          ],
          "default": "",
          "title": "Import conflict action.",
          "markdownDescription": "Action to automatically take when importing comments already present:\n- *empty*: always ask.\n- `skip`: keep the existing comment.\n- `overwrite`: replace the existing comment with the imported one.\n- `clone`: keep both the existing and the imported comment."
        },
        "code-review.codeSelectionBackgroundColor": {
          "type": "string",
          "title": "Code selection background color.",
          "markdownDescription": "Background color used to highlight the code associated to a comment.\nMust be specified using a hexadecimal representation - with or without the alpha part (`#C8C832` or `#C8C83226`) - or a `rgba()` definition.",
          "default": "codereview.code.selection.background"
        }
      }
    },
    "keybindings": [
      {
        "command": "codeReview.addNote",
        "key": "ctrl+shift+n",
        "mac": "ctrl+shift+n"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "code-review",
          "title": "Code Review",
          "icon": "images/icon-sidebar.svg"
        }
      ]
    },
    "views": {
      "code-review": [
        {
          "id": "code-review.list",
          "name": "Comment Explorer",
          "when": "codeReview:displayCodeReviewExplorer"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "code-review.list",
        "contents": "No review comments found.\nCreate a comment by selecting the lines the comment is related to, then right click and choose:\n\"Code Review: Add Note\"\n[learn more](https://marketplace.visualstudio.com/items?itemName=d-koppenhagen.vscode-code-review)\n[Add a note](command:codeReview.addNote)"
      }
    ],
    "colors": [
      {
        "id": "codereview.priority.green",
        "description": "Color for comments with priority level 1 in code-review extension.",
        "defaults": {
          "dark": "#008000",
          "light": "#008000",
          "highContrast": "#008000"
        }
      },
      {
        "id": "codereview.priority.yellow",
        "description": "Color for comments with priority level 2 in code-review extension",
        "defaults": {
          "dark": "#ffff00",
          "light": "#ffff00",
          "highContrast": "#ffff00"
        }
      },
      {
        "id": "codereview.priority.red",
        "description": "Color for comments with priority level 3 in code-review extension",
        "defaults": {
          "dark": "#ff0000",
          "light": "#ff0000",
          "highContrast": "#ff0000"
        }
      },
      {
        "id": "codereview.code.selection.background",
        "description": "Background color for highlighted code",
        "defaults": {
          "dark": "#C8C83226",
          "light": "#C8C83226",
          "highContrast": "#C8C83226"
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack:dev": "webpack --mode development --watch",
    "test-compile": "tsc -p ./",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js",
    "release": "standard-version",
    "publish": "vsce package && vsce publish",
    "publish:ovsx": "npx ovsx publish"
  },
  "devDependencies": {
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-conventional": "^11.0.0",
    "@types/glob": "^7.1.3",
    "@types/handlebars": "^4.1.0",
    "@types/js-base64": "^3.0.0",
    "@types/mocha": "^8.0.3",
    "@types/node": "^14.11.8",
    "@types/vscode": "^1.52.0",
    "@typescript-eslint/eslint-plugin": "^4.4.1",
    "@typescript-eslint/parser": "^4.4.1",
    "commitizen": "^4.2.1",
    "copy-webpack-plugin": "^6.2.1",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^7.11.0",
    "eslint-config-prettier": "^6.12.0",
    "glob": "^7.1.6",
    "husky": "^4.3.0",
    "mocha": "^8.1.3",
    "prettier": "^2.1.2",
    "pretty-quick": "^3.1.0",
    "standard-version": "^9.0.0",
    "ts-loader": "^8.0.5",
    "typescript": "^4.0.3",
    "vsce": "latest",
    "vscode-test": "^1.4.0",
    "webpack": "^5.1.2",
    "webpack-cli": "^4.0.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {
    "@fast-csv/parse": "^4.3.6",
    "git-commit-id": "^2.0.1",
    "handlebars": "^4.7.6",
    "js-base64": "^3.5.2",
    "strip-indent": "^3.0.0",
    "uuid": "8.3.1"
  }
}
